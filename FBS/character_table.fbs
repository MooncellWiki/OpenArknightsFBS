// This file is auto-generated, see https://github.com/MooncellWiki/OpenArknightsFBS for details.
enum enum__Torappu_BuildableType : int {
    NONE = 0,
    MELEE = 1,
    RANGED = 2,
    ALL = 3,
}

enum enum__Torappu_RarityRank : int {
    TIER_1 = 0,
    TIER_2 = 1,
    TIER_3 = 2,
    TIER_4 = 3,
    TIER_5 = 4,
    TIER_6 = 5,
    E_NUM = 6,
}

enum enum__Torappu_ProfessionCategory : int {
    NONE = 0,
    WARRIOR = 1,
    SNIPER = 2,
    TANK = 4,
    MEDIC = 8,
    SUPPORT = 16,
    CASTER = 32,
    SPECIAL = 64,
    TOKEN = 128,
    TRAP = 256,
    PIONEER = 512,
}

enum enum__Torappu_EvolvePhase : int {
    PHASE_0 = 0,
    PHASE_1 = 1,
    PHASE_2 = 2,
    PHASE_3 = 3,
    E_NUM = 4,
}

table clz_Torappu_CharacterData_UnlockCondition {
    phase: enum__Torappu_EvolvePhase; 
    level: int; 
}

table clz_Torappu_Blackboard_DataPair {
    key: string; 
    value: float; 
    valueStr: string; 
}

table clz_Torappu_CharacterData_TraitData {
    unlockCondition: clz_Torappu_CharacterData_UnlockCondition; 
    requiredPotentialRank: int; 
    blackboard: [clz_Torappu_Blackboard_DataPair]; 
    overrideDescripton: string; 
    prefabKey: string; 
    rangeId: string; 
}

table clz_Torappu_CharacterData_TraitDataBundle {
    candidates: [clz_Torappu_CharacterData_TraitData]; 
}

table clz_Torappu_AttributesData {
    maxHp: int; 
    atk: int; 
    def: int; 
    magicResistance: float; 
    cost: int; 
    blockCnt: int; 
    moveSpeed: float; 
    attackSpeed: float; 
    baseAttackTime: float; 
    respawnTime: int; 
    hpRecoveryPerSec: float; 
    spRecoveryPerSec: float; 
    maxDeployCount: int; 
    maxDeckStackCnt: int; 
    tauntLevel: int; 
    massLevel: int; 
    baseForceLevel: int; 
    stunImmune: bool; 
    silenceImmune: bool; 
    sleepImmune: bool; 
    frozenImmune: bool; 
    levitateImmune: bool; 
    disarmedCombatImmune: bool; 
}

table clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_ {
    level: int; 
    data: clz_Torappu_AttributesData; 
}

enum enum__Torappu_ItemType : int {
    NONE = 0,
    CHAR = 1,
    CARD_EXP = 2,
    MATERIAL = 3,
    GOLD = 4,
    EXP_PLAYER = 5,
    TKT_TRY = 6,
    TKT_RECRUIT = 7,
    TKT_INST_FIN = 8,
    TKT_GACHA = 9,
    ACTIVITY_COIN = 10,
    DIAMOND = 11,
    DIAMOND_SHD = 12,
    HGG_SHD = 13,
    LGG_SHD = 14,
    FURN = 15,
    AP_GAMEPLAY = 16,
    AP_BASE = 17,
    SOCIAL_PT = 18,
    CHAR_SKIN = 19,
    TKT_GACHA_10 = 20,
    TKT_GACHA_PRSV = 21,
    AP_ITEM = 22,
    AP_SUPPLY = 23,
    RENAMING_CARD = 24,
    RENAMING_CARD_2 = 25,
    ET_STAGE = 26,
    ACTIVITY_ITEM = 27,
    VOUCHER_PICK = 28,
    VOUCHER_CGACHA = 29,
    VOUCHER_MGACHA = 30,
    CRS_SHOP_COIN = 31,
    CRS_RUNE_COIN = 32,
    LMTGS_COIN = 33,
    EPGS_COIN = 34,
    LIMITED_TKT_GACHA_10 = 35,
    LIMITED_FREE_GACHA = 36,
    REP_COIN = 37,
    ROGUELIKE = 38,
    LINKAGE_TKT_GACHA_10 = 39,
    VOUCHER_ELITE_II_5 = 40,
    VOUCHER_ELITE_II_6 = 41,
    VOUCHER_SKIN = 42,
    RETRO_COIN = 43,
    PLAYER_AVATAR = 44,
    UNI_COLLECTION = 45,
    VOUCHER_FULL_POTENTIAL = 46,
    RL_COIN = 47,
    RETURN_CREDIT = 48,
    MEDAL = 49,
    CHARM = 50,
    HOME_BACKGROUND = 51,
    EXTERMINATION_AGENT = 52,
    OPTIONAL_VOUCHER_PICK = 53,
    ACT_CART_COMPONENT = 54,
    VOUCHER_LEVELMAX_6 = 55,
    VOUCHER_LEVELMAX_5 = 56,
    ACTIVITY_POTENTIAL = 57,
    ITEM_PACK = 58,
    SANDBOX = 59,
    FAVOR_ADD_ITEM = 60,
    CLASSIC_SHD = 61,
    CLASSIC_TKT_GACHA = 62,
    CLASSIC_TKT_GACHA_10 = 63,
    LIMITED_BUFF = 64,
    CLASSIC_FES_PICK_TIER_5 = 65,
    CLASSIC_FES_PICK_TIER_6 = 66,
    RETURN_PROGRESS = 67,
    NEW_PROGRESS = 68,
    MCARD_VOUCHER = 69,
    MATERIAL_ISSUE_VOUCHER = 70,
    CRS_SHOP_COIN_V2 = 71,
    HOME_THEME = 72,
    SANDBOX_PERM = 73,
    SANDBOX_TOKEN = 74,
    TEMPLATE_TRAP = 75,
    NAME_CARD_SKIN = 76,
    EXCLUSIVE_TKT_GACHA = 77,
    EXCLUSIVE_TKT_GACHA_10 = 78,
}

table clz_Torappu_ItemBundle {
    id: string; 
    count: int; 
    type: enum__Torappu_ItemType; 
}

table clz_Torappu_CharacterData_PhaseData {
    characterPrefabKey: string; 
    rangeId: string; 
    maxLevel: int; 
    attributesKeyFrames: [clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_]; 
    evolveCost: [clz_Torappu_ItemBundle]; 
}

table clz_Torappu_CharacterData_MainSkill_SpecializeLevelData {
    unlockCond: clz_Torappu_CharacterData_UnlockCondition; 
    lvlUpTime: int; 
    levelUpCost: [clz_Torappu_ItemBundle]; 
}

table clz_Torappu_CharacterData_MainSkill {
    skillId: string; 
    overridePrefabKey: string; 
    overrideTokenKey: string; 
    levelUpCostCond: [clz_Torappu_CharacterData_MainSkill_SpecializeLevelData]; // __prts__check_required__specializeLevelUpData__
    unlockCond: clz_Torappu_CharacterData_UnlockCondition; // __prts__check_required__initialUnlockCond__
}

table dict__string__bool {
    key: string(key);
    value: bool;
}

table clz_Torappu_TalentData {
    unlockCondition: clz_Torappu_CharacterData_UnlockCondition; 
    requiredPotentialRank: int; 
    prefabKey: string; 
    name: string; 
    description: string; 
    rangeId: string; 
    blackboard: [clz_Torappu_Blackboard_DataPair]; 
    tokenKey: string; 
}

table clz_Torappu_CharacterData_TalentDataBundle {
    candidates: [clz_Torappu_TalentData]; 
}

enum enum__Torappu_CharacterData_PotentialRank_TypeEnum : int {
    BUFF = 0,
    CUSTOM = 1,
}

enum enum__Torappu_AbnormalFlag : int {
    STUNNED = 0,
    SP_RECOVER_STOPPED = 1,
    TARGET_FREE = 2,
    BLOCK_FREE = 3,
    HIDDEN = 4,
    INVINCIBLE = 5,
    UNDEADABLE = 6,
    HEAL_FREE = 7,
    UNBALANCE_IMMUNE = 8,
    INVISIBLE = 9,
    UNUSED_PLACEHOLDER_1 = 10,
    DISARMED = 11,
    SILENCED = 12,
    UNMOVABLE = 13,
    UNUSED_PLACEHOLDER_2 = 14,
    ALLY_TARGET_FREE = 15,
    FROZEN = 16,
    CAMOUFLAGE = 17,
    FORCE_DISARMED = 18,
    STUNNED_NO_AMPLIFY_DAMAGE = 19,
    DISABLE_COMBAT = 20,
    ELEMENT_FREE_ALL = 21,
    UNMOVABLE_PRIVATE = 22,
    COLD = 23,
    SKILL_NOT_ACTIVATABLE = 24,
    LEVITATE = 25,
    DURANCE = 26,
    NOT_WITHDRAWABLE = 27,
    OUT_OF_GROUND = 28,
    SP_MODIFY_STOPPED = 29,
    ANTI_STATUS_RESISTABLE = 30,
    DISARMED_COMBAT = 31,
    E_NUM = 32,
}

enum enum__Torappu_AbnormalCombo : int {
    SLEEPING = 0,
    SHELTERING = 1,
    E_NUM = 2,
}

enum enum__Torappu_AttributeType : int {
    MAX_HP = 0,
    ATK = 1,
    DEF = 2,
    MAGIC_RESISTANCE = 3,
    COST = 4,
    BLOCK_CNT = 5,
    MOVE_SPEED = 6,
    ATTACK_SPEED = 7,
    BASE_ATTACK_TIME = 8,
    RESERVED_0 = 9,
    RESERVED_1 = 10,
    RESERVED_2 = 11,
    RESERVED_3 = 12,
    HP_RECOVERY_PER_SEC = 13,
    SP_RECOVERY_PER_SEC = 14,
    ABILITY_RANGE_FORWARD_EXTEND = 15,
    MAX_DEPLOY_COUNT = 16,
    DEF_PENETRATE = 17,
    MAGIC_RESIST_PENETRATE = 18,
    HP_RECOVERY_PER_SEC_BY_MAX_HP_RATIO = 19,
    TAUNT_LEVEL = 20,
    RESPAWN_TIME = 21,
    MAX_DECK_STACK_CNT = 22,
    MASS_LEVEL = 23,
    BASE_FORCE_LEVEL = 24,
    DEF_PENETRATE_FIXED = 25,
    ONE_MINUS_STATUS_RESISTANCE = 26,
    MAGIC_RESIST_PENETRATE_FIXED = 27,
    MAX_EP = 28,
    EP_RECOVERY_PER_SEC = 29,
    SP_RECOVER_RATIO = 30,
    EP_DAMAGE_RESISTANCE = 31,
    EP_RESISTANCE = 32,
    DAMAGE_HITRATE_PHYSICAL = 33,
    DAMAGE_HITRATE_MAGICAL = 34,
    E_NUM = 35,
}

enum enum__Torappu_AttributeModifierData_AttributeModifier_FormulaItemType : int {
    ADDITION = 0,
    MULTIPLIER = 1,
    FINAL_ADDITION = 2,
    FINAL_SCALER = 3,
}

table clz_Torappu_AttributeModifierData_AttributeModifier {
    attributeType: enum__Torappu_AttributeType; 
    formulaItem: enum__Torappu_AttributeModifierData_AttributeModifier_FormulaItemType; 
    value: float; 
    loadFromBlackboard: bool; 
    fetchBaseValueFromSourceEntity: bool; 
}

table clz_Torappu_AttributeModifierData {
    abnormalFlags: [enum__Torappu_AbnormalFlag]; 
    abnormalImmunes: [enum__Torappu_AbnormalFlag]; 
    abnormalAntis: [enum__Torappu_AbnormalFlag]; 
    abnormalCombos: [enum__Torappu_AbnormalCombo]; 
    abnormalComboImmunes: [enum__Torappu_AbnormalCombo]; 
    attributeModifiers: [clz_Torappu_AttributeModifierData_AttributeModifier]; 
}

table clz_Torappu_ExternalBuff {
    attributes: clz_Torappu_AttributeModifierData; 
}

table clz_Torappu_CharacterData_PotentialRank {
    type: enum__Torappu_CharacterData_PotentialRank_TypeEnum; 
    description: string; 
    buff: clz_Torappu_ExternalBuff; 
    equivalentCost: [clz_Torappu_ItemBundle]; 
}

table clz_Torappu_AttributesDeltaData {
    maxHp: int; 
    atk: int; 
    def: int; 
    magicResistance: float; 
    cost: int; 
    blockCnt: int; 
    moveSpeed: float; 
    attackSpeed: float; 
    baseAttackTime: float; 
    respawnTime: int; 
    hpRecoveryPerSec: float; 
    spRecoveryPerSec: float; 
    maxDeployCount: int; 
    maxDeckStackCnt: int; 
    tauntLevel: int; 
    massLevel: int; 
    baseForceLevel: int; 
    stunImmune: bool; 
    silenceImmune: bool; 
    sleepImmune: bool; 
    frozenImmune: bool; 
    levitateImmune: bool; 
    disarmedCombatImmune: bool; 
}

table clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesDeltaData_Torappu_AttributesData_ {
    level: int; 
    data: clz_Torappu_AttributesDeltaData; 
}

table clz_Torappu_CharacterData_SkillLevelCost {
    unlockCond: clz_Torappu_CharacterData_UnlockCondition; 
    lvlUpCost: [clz_Torappu_ItemBundle]; 
}

table clz_Torappu_CharacterData {
    name: string; 
    description: string; 
    canUseGeneralPotentialItem: bool; 
    canUseActivityPotentialItem: bool; 
    potentialItemId: string; 
    activityPotentialItemId: string; 
    classicPotentialItemId: string; 
    nationId: string; 
    groupId: string; 
    teamId: string; 
    displayNumber: string; 
    appellation: string; 
    position: enum__Torappu_BuildableType; 
    tagList: [string]; 
    itemUsage: string; 
    itemDesc: string; 
    itemObtainApproach: string; 
    isNotObtainable: bool; 
    isSpChar: bool; 
    maxPotentialLevel: int; 
    rarity: enum__Torappu_RarityRank; 
    profession: enum__Torappu_ProfessionCategory; 
    subProfessionId: string; 
    trait: clz_Torappu_CharacterData_TraitDataBundle; 
    phases: [clz_Torappu_CharacterData_PhaseData]; 
    skills: [clz_Torappu_CharacterData_MainSkill]; 
    displayTokenDict: [dict__string__bool]; 
    talents: [clz_Torappu_CharacterData_TalentDataBundle]; 
    potentialRanks: [clz_Torappu_CharacterData_PotentialRank]; 
    favorKeyFrames: [clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesDeltaData_Torappu_AttributesData_]; 
    allSkillLvlup: [clz_Torappu_CharacterData_SkillLevelCost]; 
}

table dict__string__clz_Torappu_CharacterData {
    key: string(key);
    value: clz_Torappu_CharacterData;
}
table clz_Torappu_SimpleKVTable_clz_Torappu_CharacterData {
    characters: [dict__string__clz_Torappu_CharacterData];
}
root_type clz_Torappu_SimpleKVTable_clz_Torappu_CharacterData;

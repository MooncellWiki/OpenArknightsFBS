// This file is auto-generated, see https://github.com/MooncellWiki/OpenArknightsFBS for details.
enum enum__Torappu_StageType : int {
    MAIN = 0,
    DAILY = 1,
    TRAINING = 2,
    ACTIVITY = 3,
    GUIDE = 4,
    SUB = 5,
    CAMPAIGN = 6,
    SPECIAL_STORY = 7,
    HANDBOOK_BATTLE = 8,
    CLIMB_TOWER = 9,
    ENUM = 10,
}

enum enum__Torappu_LevelData_Difficulty : int {
    NONE = 0,
    NORMAL = 1,
    FOUR_STAR = 2,
    EASY = 4,
    ALL = 7,
}

enum enum__Torappu_StageData_PerformanceStageFlag : int {
    NORMAL_STAGE = 0,
    PERFORMANCE_STAGE = 1,
}

enum enum__Torappu_StageDiffGroup : int {
    NONE = 0,
    EASY = 1,
    NORMAL = 2,
    TOUGH = 4,
    ALL = 7,
}

enum enum__Torappu_PlayerBattleRank : int {
    FAIL = 1,
    PASS = 2,
    COMPLETE = 3,
    ERR_ZERO = 0,
}

table clz_Torappu_StageData_ConditionDesc {
    stageId: string; 
    completeState: enum__Torappu_PlayerBattleRank; 
}

enum enum__Torappu_AppearanceStyle : int {
    MAIN_NORMAL = 0,
    MAIN_PREDEFINED = 1,
    SUB = 2,
    TRAINING = 3,
    HIGH_DIFFICULTY = 4,
    MIST_OPS = 5,
    SPECIAL_STORY = 6,
}

enum enum__Torappu_ItemType : int {
    NONE = 0,
    CHAR = 1,
    CARD_EXP = 2,
    MATERIAL = 3,
    GOLD = 4,
    EXP_PLAYER = 5,
    TKT_TRY = 6,
    TKT_RECRUIT = 7,
    TKT_INST_FIN = 8,
    TKT_GACHA = 9,
    ACTIVITY_COIN = 10,
    DIAMOND = 11,
    DIAMOND_SHD = 12,
    HGG_SHD = 13,
    LGG_SHD = 14,
    FURN = 15,
    AP_GAMEPLAY = 16,
    AP_BASE = 17,
    SOCIAL_PT = 18,
    CHAR_SKIN = 19,
    TKT_GACHA_10 = 20,
    TKT_GACHA_PRSV = 21,
    AP_ITEM = 22,
    AP_SUPPLY = 23,
    RENAMING_CARD = 24,
    RENAMING_CARD_2 = 25,
    ET_STAGE = 26,
    ACTIVITY_ITEM = 27,
    VOUCHER_PICK = 28,
    VOUCHER_CGACHA = 29,
    VOUCHER_MGACHA = 30,
    CRS_SHOP_COIN = 31,
    CRS_RUNE_COIN = 32,
    LMTGS_COIN = 33,
    EPGS_COIN = 34,
    LIMITED_TKT_GACHA_10 = 35,
    LIMITED_FREE_GACHA = 36,
    REP_COIN = 37,
    ROGUELIKE = 38,
    LINKAGE_TKT_GACHA_10 = 39,
    VOUCHER_ELITE_II_5 = 40,
    VOUCHER_ELITE_II_6 = 41,
    VOUCHER_SKIN = 42,
    RETRO_COIN = 43,
    PLAYER_AVATAR = 44,
    UNI_COLLECTION = 45,
    VOUCHER_FULL_POTENTIAL = 46,
    RL_COIN = 47,
    RETURN_CREDIT = 48,
    MEDAL = 49,
    CHARM = 50,
    HOME_BACKGROUND = 51,
    EXTERMINATION_AGENT = 52,
    OPTIONAL_VOUCHER_PICK = 53,
    ACT_CART_COMPONENT = 54,
    VOUCHER_LEVELMAX_6 = 55,
    VOUCHER_LEVELMAX_5 = 56,
    ACTIVITY_POTENTIAL = 57,
    ITEM_PACK = 58,
    SANDBOX = 59,
    FAVOR_ADD_ITEM = 60,
    CLASSIC_SHD = 61,
    CLASSIC_TKT_GACHA = 62,
    CLASSIC_TKT_GACHA_10 = 63,
    LIMITED_BUFF = 64,
    CLASSIC_FES_PICK_TIER_5 = 65,
    CLASSIC_FES_PICK_TIER_6 = 66,
    RETURN_PROGRESS = 67,
    NEW_PROGRESS = 68,
    MCARD_VOUCHER = 69,
    MATERIAL_ISSUE_VOUCHER = 70,
    CRS_SHOP_COIN_V2 = 71,
    HOME_THEME = 72,
    SANDBOX_PERM = 73,
    SANDBOX_TOKEN = 74,
    TEMPLATE_TRAP = 75,
    NAME_CARD_SKIN = 76,
    EXCLUSIVE_TKT_GACHA = 77,
    EXCLUSIVE_TKT_GACHA_10 = 78,
}

table clz_Torappu_ItemBundle {
    id: string; 
    count: int; 
    type: enum__Torappu_ItemType; 
}

enum enum__Torappu_StageDropType : int {
    NONE = 0,
    ONCE = 1,
    NORMAL = 2,
    SPECIAL = 3,
    ADDITIONAL = 4,
    APRETURN = 5,
    DIAMOND_MATERIAL = 6,
    FUNITURE_DROP = 7,
    COMPLETE = 8,
    CHARM_DROP = 9,
    OVERRIDE_DROP = 10,
    ITEM_RETURN = 11,
}

table clz_Torappu_WeightItemBundle {
    id: string; 
    type: enum__Torappu_ItemType; 
    dropType: enum__Torappu_StageDropType; 
    count: int; 
    weight: int; 
}

table list_clz_Torappu_WeightItemBundle {
    values: [clz_Torappu_WeightItemBundle];
}

table clz_Torappu_StageData_DisplayRewards {
    type: enum__Torappu_ItemType; 
    id: string; 
    dropType: enum__Torappu_StageDropType; 
}

enum enum__Torappu_OccPer : int {
    ALWAYS = 0,
    ALMOST = 1,
    USUAL = 2,
    OFTEN = 3,
    SOMETIMES = 4,
    NEVER = 5,
    DEFINITELY_BUFF = 6,
}

table clz_Torappu_StageData_DisplayDetailRewards {
    occPercent: enum__Torappu_OccPer; 
    type: enum__Torappu_ItemType; 
    id: string; 
    dropType: enum__Torappu_StageDropType; 
}

table clz_Torappu_StageData_StageDropInfo {
    firstPassRewards: [clz_Torappu_ItemBundle]; 
    firstCompleteRewards: [clz_Torappu_ItemBundle]; 
    passRewards: [list_clz_Torappu_WeightItemBundle]; 
    completeRewards: [list_clz_Torappu_WeightItemBundle]; 
    displayRewards: [clz_Torappu_StageData_DisplayRewards]; 
    displayDetailRewards: [clz_Torappu_StageData_DisplayDetailRewards]; 
}

table clz_Torappu_StageData_ExtraConditionDesc {
    index: int; 
    template: string; 
    unlockParam: [string]; 
}

enum enum__Torappu_StageData_SpecialStageUnlockProgressType : int {
    ONCE = 0,
    PROGRESS = 1,
}

table dict__int__string {
    key: int(key);
    value: string;
}

table clz_Torappu_StageData_SpecialProgressInfo {
    progressType: enum__Torappu_StageData_SpecialStageUnlockProgressType; 
    descList: [dict__int__string]; 
}

table clz_Torappu_StageData_SpecialStoryInfo {
    stageId: string; 
    rewards: [clz_Torappu_ItemBundle]; 
    progressInfo: clz_Torappu_StageData_SpecialProgressInfo; 
}

table clz_Torappu_StageData {
    stageType: enum__Torappu_StageType; 
    difficulty: enum__Torappu_LevelData_Difficulty; 
    performanceStageFlag: enum__Torappu_StageData_PerformanceStageFlag; 
    diffGroup: enum__Torappu_StageDiffGroup; 
    unlockCondition: [clz_Torappu_StageData_ConditionDesc]; 
    stageId: string; 
    levelId: string; 
    zoneId: string; 
    code: string; 
    name: string; 
    description: string; 
    hardStagedId: string; 
    dangerLevel: string; 
    dangerPoint: float; 
    loadingPicId: string; 
    canPractice: bool; 
    canBattleReplay: bool; 
    apCost: int; 
    apFailReturn: int; 
    etItemId: string; 
    etCost: int; 
    etFailReturn: int; 
    etButtonStyle: string; 
    apProtectTimes: int; 
    diamondOnceDrop: int; 
    practiceTicketCost: int; 
    dailyStageDifficulty: int; 
    expGain: int; 
    goldGain: int; 
    loseExpGain: int; 
    loseGoldGain: int; 
    passFavor: int; 
    completeFavor: int; 
    slProgress: int; 
    displayMainItem: string; 
    hilightMark: bool; 
    bossMark: bool; 
    isPredefined: bool; 
    isHardPredefined: bool; 
    isSkillSelectablePredefined: bool; 
    isStoryOnly: bool; 
    appearanceStyle: enum__Torappu_AppearanceStyle; 
    stageDropInfo: clz_Torappu_StageData_StageDropInfo; 
    canUseCharm: bool; 
    canUseTech: bool; 
    canUseTrapTool: bool; 
    canUseBattlePerformance: bool; 
    canContinuousBattle: bool; 
    startButtonOverrideId: string; 
    isStagePatch: bool; 
    mainStageId: string; 
    extraCondition: [clz_Torappu_StageData_ExtraConditionDesc]; // __prts__check_required__S_extraCondition__
    extraInfo: [clz_Torappu_StageData_SpecialStoryInfo]; // __prts__check_required__S_extraInfo__
}

table dict__string__clz_Torappu_StageData {
    key: string(key);
    value: clz_Torappu_StageData;
}

table clz_Torappu_RuneStageGroupData_RuneStageInst {
    stageId: string; 
    activePackedRuneIds: [string]; 
}

table clz_Torappu_RuneStageGroupData {
    groupId: string; 
    activeRuneStages: [clz_Torappu_RuneStageGroupData_RuneStageInst]; 
    startTs: long; 
    endTs: long; 
}

table dict__string__clz_Torappu_RuneStageGroupData {
    key: string(key);
    value: clz_Torappu_RuneStageGroupData;
}

table clz_Torappu_MapThemeData {
    themeId: string; 
    unitColor: string; 
    buildableColor: string; 
    themeType: string; 
    trapTintColor: string; 
}

table dict__string__clz_Torappu_MapThemeData {
    key: string(key);
    value: clz_Torappu_MapThemeData;
}

table clz_Torappu_TileAppendInfo {
    tileKey: string; 
    name: string; 
    description: string; 
    isFunctional: bool; 
}

table dict__string__clz_Torappu_TileAppendInfo {
    key: string(key);
    value: clz_Torappu_TileAppendInfo;
}

table clz_Torappu_WeeklyForceOpenTable {
    id: string; 
    startTime: long; 
    endTime: long; 
    forceOpenList: [string]; 
}

table dict__string__clz_Torappu_WeeklyForceOpenTable {
    key: string(key);
    value: clz_Torappu_WeeklyForceOpenTable;
}

table dict__string__long {
    key: string(key);
    value: long;
}

table clz_Torappu_TimelyDropTimeInfo {
    startTs: long; 
    endTs: long; 
    stagePic: string; 
    dropPicId: string; 
    stageUnlock: string; 
    entranceDownPicId: string; 
    entranceUpPicId: string; 
    timelyGroupId: string; 
    weeklyPicId: string; 
    apSupplyOutOfDateDict: [dict__string__long]; 
}

table dict__string__clz_Torappu_TimelyDropTimeInfo {
    key: string(key);
    value: clz_Torappu_TimelyDropTimeInfo;
}

table dict__string__clz_Torappu_StageData_StageDropInfo {
    key: string(key);
    value: clz_Torappu_StageData_StageDropInfo;
}

table clz_Torappu_OverrideDropInfo {
    itemId: string; 
    startTs: long; 
    endTs: long; 
    zoneRange: string; 
    times: int; 
    name: string; 
    egName: string; 
    desc1: string; 
    desc2: string; 
    desc3: string; 
    dropTag: string; 
    dropTypeDesc: string; 
    dropInfo: [dict__string__clz_Torappu_StageData_StageDropInfo]; 
}

table dict__string__clz_Torappu_OverrideDropInfo {
    key: string(key);
    value: clz_Torappu_OverrideDropInfo;
}

table clz_Torappu_TimelyDropInfo {
    dropInfo: [dict__string__clz_Torappu_StageData_StageDropInfo]; 
}

table dict__string__clz_Torappu_TimelyDropInfo {
    key: string(key);
    value: clz_Torappu_TimelyDropInfo;
}

table clz_Torappu_StageValidInfo {
    startTs: long; 
    endTs: long; 
}

table dict__string__clz_Torappu_StageValidInfo {
    key: string(key);
    value: clz_Torappu_StageValidInfo;
}

enum enum__Torappu_FogType : int {
    ZONE = 0,
    STAGE = 1,
}

table clz_Torappu_StageFogInfo {
    lockId: string; 
    fogType: enum__Torappu_FogType; 
    stageId: string; 
    lockName: string; 
    lockDesc: string; 
    unlockItemId: string; 
    unlockItemType: enum__Torappu_ItemType; 
    unlockItemNum: int; 
    preposedStageId: string; 
    preposedLockId: string; 
}

table dict__string__clz_Torappu_StageFogInfo {
    key: string(key);
    value: clz_Torappu_StageFogInfo;
}

enum enum__Torappu_EvolvePhase : int {
    PHASE_0 = 0,
    PHASE_1 = 1,
    PHASE_2 = 2,
    PHASE_3 = 3,
    E_NUM = 4,
}

table clz_Torappu_StageStartCond_RequireChar {
    charId: string; 
    evolvePhase: enum__Torappu_EvolvePhase; 
}

table clz_Torappu_StageStartCond {
    requireChars: [clz_Torappu_StageStartCond_RequireChar]; 
    excludeAssists: [string]; 
    isNotPass: bool; 
}

table dict__string__clz_Torappu_StageStartCond {
    key: string(key);
    value: clz_Torappu_StageStartCond;
}

table clz_Torappu_StageDiffGroupTable {
    normalId: string; 
    toughId: string; 
    easyId: string; 
}

table dict__string__clz_Torappu_StageDiffGroupTable {
    key: string(key);
    value: clz_Torappu_StageDiffGroupTable;
}

table clz_Torappu_StoryStageShowGroup {
    displayRecordId: string; 
    stageId: string; 
    accordingStageId: string; 
    diffGroup: enum__Torappu_StageDiffGroup; 
}

table dict__enum__Torappu_StageDiffGroup__clz_Torappu_StoryStageShowGroup {
    key: enum__Torappu_StageDiffGroup(key);
    value: clz_Torappu_StoryStageShowGroup;
}

table dict__string__list_dict__enum__Torappu_StageDiffGroup__clz_Torappu_StoryStageShowGroup {
    key: string(key);
    value: [dict__enum__Torappu_StageDiffGroup__clz_Torappu_StoryStageShowGroup];
}

table clz_Torappu_SpecialBattleFinishStageData {
    stageId: string; 
    skipAccomplishPerform: bool; 
}

table dict__string__clz_Torappu_SpecialBattleFinishStageData {
    key: string(key);
    value: clz_Torappu_SpecialBattleFinishStageData;
}

table clz_Torappu_RecordRewardServerData {
    stageId: string; 
    rewards: [clz_Torappu_ItemBundle]; 
}

table dict__string__clz_Torappu_RecordRewardServerData {
    key: string(key);
    value: clz_Torappu_RecordRewardServerData;
}

table clz_Torappu_ApProtectZoneInfo_TimeRange {
    startTs: long; 
    endTs: long; 
}

table clz_Torappu_ApProtectZoneInfo {
    zoneId: string; 
    timeRanges: [clz_Torappu_ApProtectZoneInfo_TimeRange]; 
}

table dict__string__clz_Torappu_ApProtectZoneInfo {
    key: string(key);
    value: clz_Torappu_ApProtectZoneInfo;
}

enum enum__Torappu_OverrideGameMode : int {
    NONE = 0,
    ACT27SIDE = 1,
}

table clz_Torappu_ActCustomStageData {
    overrideGameMode: enum__Torappu_OverrideGameMode; 
}

table dict__string__clz_Torappu_ActCustomStageData {
    key: string(key);
    value: clz_Torappu_ActCustomStageData;
}

table clz_Torappu_StageTable {
    stages: [dict__string__clz_Torappu_StageData]; 
    runeStageGroups: [dict__string__clz_Torappu_RuneStageGroupData]; 
    mapThemes: [dict__string__clz_Torappu_MapThemeData]; 
    tileInfo: [dict__string__clz_Torappu_TileAppendInfo]; 
    forceOpenTable: [dict__string__clz_Torappu_WeeklyForceOpenTable]; 
    timelyStageDropInfo: [dict__string__clz_Torappu_TimelyDropTimeInfo]; 
    overrideDropInfo: [dict__string__clz_Torappu_OverrideDropInfo]; 
    timelyTable: [dict__string__clz_Torappu_TimelyDropInfo]; 
    stageValidInfo: [dict__string__clz_Torappu_StageValidInfo]; 
    stageFogInfo: [dict__string__clz_Torappu_StageFogInfo]; 
    stageStartConds: [dict__string__clz_Torappu_StageStartCond]; 
    diffGroupTable: [dict__string__clz_Torappu_StageDiffGroupTable]; 
    storyStageShowGroup: [dict__string__list_dict__enum__Torappu_StageDiffGroup__clz_Torappu_StoryStageShowGroup]; 
    specialBattleFinishStageData: [dict__string__clz_Torappu_SpecialBattleFinishStageData]; 
    recordRewardData: [dict__string__clz_Torappu_RecordRewardServerData]; 
    apProtectZoneInfo: [dict__string__clz_Torappu_ApProtectZoneInfo]; 
    actCustomStageDatas: [dict__string__clz_Torappu_ActCustomStageData]; 
    spNormalStageIdFor4StarList: [string]; 
}

root_type clz_Torappu_StageTable;

// This file is auto-generated, see https://github.com/MooncellWiki/OpenArknightsFBS for details.
table clz_Torappu_SandboxMapConstTable {
    directionNames: [string]; 
    homeNodeStageId: string; 
    homeRushStageCode: string; 
    homeRushStageName: string; 
    homeRushDesc: string; 
    crazyRevengeRushGroup: string; 
    homeBuildModeBGM: string; 
}

table clz_Torappu_SandboxBaseConstTable {
    cookRegularCostItemId: string; 
    cookRegularCostItemIdCnt: int; 
    squadTabNameList: [string]; 
    charRarityColorList: [string]; 
    sumFoodLimitedCount: int; 
    sumBuildingLimitedCount: int; 
    sumTacticalLimitedCount: int; 
    sumFoodMatLimitedCount: int; 
    sumBuildingMatLimitedCount: int; 
    sumStaminaPotLimitedCount: int; 
    sumGoldLimitedCount: int; 
    itemLimitedCount: int; 
    blackBoxSlotCnt: int; 
    scoutNodeUpgradeId: string; 
    battleNodeUpgradeId: string; 
    staminaPotCostOnce: int; 
    staminaPotItemId: string; 
    staminapotRedMinCnt: int; 
    staminapotYellowMinCnt: int; 
    staminapotGreenMinCnt: int; 
    staminapotMaxPercentCnt: int; 
    staminaPotActionPoint: int; 
    goldItemId: string; 
    toolboxSlotCapacity: int; 
    toolboxSlotCnt: int; 
    teamPopulationLimit: int; 
    researchInformationDesc: string; 
    settleFailDesc: string; 
    settleAbortDesc: string; 
    settleSucDesc: string; 
}

enum enum__Torappu_TipData_Category : int {
    NONE = 0,
    BATTLE = 1,
    UI = 2,
    BUILDING = 4,
    GACHA = 8,
    MISC = 16,
    ALL = 31,
}

table clz_Torappu_TipData {
    tip: string; 
    weight: float; 
    category: enum__Torappu_TipData_Category; 
}

table clz_Torappu_SandboxFoodProduceData {
    itemId: string; 
    mainMaterialItems: [string]; 
    buffId: string; 
    unlockDesc: string; 
}

table dict__string__clz_Torappu_SandboxFoodProduceData {
    key: string(key);
    value: clz_Torappu_SandboxFoodProduceData;
}

enum enum__Torappu_SandboxFoodMatType : int {
    MAIN = 0,
    SUB = 1,
}

table clz_Torappu_SandboxFoodmatBuffData {
    itemId: string; 
    buffId: string; 
    buffDesc: string; 
    matType: enum__Torappu_SandboxFoodMatType; 
    sortId: int; 
}

table dict__string__clz_Torappu_SandboxFoodmatBuffData {
    key: string(key);
    value: clz_Torappu_SandboxFoodmatBuffData;
}

table clz_Torappu_SandboxFoodStaminaData {
    itemId: string; 
    potCnt: int; 
    foodStaminaCnt: int; 
}

table dict__string__clz_Torappu_SandboxFoodStaminaData {
    key: string(key);
    value: clz_Torappu_SandboxFoodStaminaData;
}

table dict__string__int {
    key: string(key);
    value: int;
}

table clz_Torappu_SandboxBuildProduceData {
    itemProduceId: string; 
    itemId: string; 
    itemTypeText: string; 
    materialItems: [dict__string__int]; 
}

table dict__string__clz_Torappu_SandboxBuildProduceData {
    key: string(key);
    value: clz_Torappu_SandboxBuildProduceData;
}

table clz_Torappu_SandboxBuildGoldRatioData {
    itemId: string; 
    ratio: int; 
    effectDesc: string; 
}

enum enum__Torappu_SandboxBuildingItemType : int {
    NONE = 0,
    PRODUCTION = 1,
    SCOUT = 2,
    BATTLE = 3,
    FUNCTION = 4,
}

table clz_Torappu_SandboxBuildingItemData {
    itemId: string; 
    itemSubType: enum__Torappu_SandboxBuildingItemType; 
    itemRarity: int; 
}

table dict__string__clz_Torappu_SandboxBuildingItemData {
    key: string(key);
    value: clz_Torappu_SandboxBuildingItemData;
}

table clz_Torappu_SandboxBuildProduceUnlockData {
    itemId: string; 
    buildingEffectDesc: string; 
    buildingItemDesc: string; 
    buildingUnlockDesc: string; 
}

table dict__string__clz_Torappu_SandboxBuildProduceUnlockData {
    key: string(key);
    value: clz_Torappu_SandboxBuildProduceUnlockData;
}

enum enum__Torappu_SandboxCraftItemType : int {
    SHORT = 0,
    LONG = 1,
}

table clz_Torappu_SandboxCraftItemData {
    itemId: string; 
    sortId: int; 
    getFrom: string; 
    npcId: string; 
    notObtainedDesc: string; 
    itemType: enum__Torappu_SandboxCraftItemType; 
}

table dict__string__clz_Torappu_SandboxCraftItemData {
    key: string(key);
    value: clz_Torappu_SandboxCraftItemData;
}

table clz_Torappu_SandboxItemTrapData {
    itemId: string; 
    trapId: string; 
    trapPhase: int; 
    trapLevel: int; 
    skillIndex: int; 
    skillLevel: int; 
}

table dict__string__clz_Torappu_SandboxItemTrapData {
    key: string(key);
    value: clz_Torappu_SandboxItemTrapData;
}

table clz_Torappu_SandboxDevelopmentData {
    buffId: string; 
    positionX: int; 
    positionY: int; 
    frontNodeId: string; 
    nextNodeIds: [string]; 
    buffLimitedId: string; 
    tokenCost: int; 
    canBuffResearch: bool; 
    buffResearchDesc: string; 
    buffName: string; 
    buffIconId: string; 
    nodeTitle: string; 
    buffEffectDesc: string; 
}

table dict__string__clz_Torappu_SandboxDevelopmentData {
    key: string(key);
    value: clz_Torappu_SandboxDevelopmentData;
}

table clz_Torappu_SandboxDevelopmentLimitData {
    buffLimitedId: string; 
    positionX: int; 
    buffCostLimitedCount: int; 
}

table dict__string__clz_Torappu_SandboxDevelopmentLimitData {
    key: string(key);
    value: clz_Torappu_SandboxDevelopmentLimitData;
}

enum enum__Torappu_SandboxItemType : int {
    NONE = 0,
    TACTICAL = 1,
    STAMINA = 2,
    STAMINAPOT = 3,
    BUILDING = 4,
    BUILDINGMAT = 5,
    FOOD = 6,
    FOODMAT = 7,
    SPECIALMAT = 8,
    GOLD = 9,
    CRAFT = 10,
    PLACEHOLDER = 11,
}

table clz_Torappu_SandboxItemToastData {
    itemType: enum__Torappu_SandboxItemType; 
    toastDesc: string; 
    color: string; 
}

table dict__enum__Torappu_SandboxItemType__clz_Torappu_SandboxItemToastData {
    key: enum__Torappu_SandboxItemType(key);
    value: clz_Torappu_SandboxItemToastData;
}

table clz_Torappu_SandboxDevelopmentLineSegmentData {
    fromNodeId: string; 
    passingNodeIds: [string]; 
    fromAxisPosX: int; 
    fromAxisPosY: int; 
    toAxisPosX: int; 
    toAxisPosY: int; 
}

table clz_Torappu_SandboxRewardItemConfigData {
    rewardItem: string; 
    rewardType: enum__Torappu_SandboxItemType; 
}

table clz_Torappu_SandboxRewardData {
    rewardList: [clz_Torappu_SandboxRewardItemConfigData]; 
}

table dict__string__clz_Torappu_SandboxRewardData {
    key: string(key);
    value: clz_Torappu_SandboxRewardData;
}

enum enum__Torappu_SandboxRewardTrapDropType : int {
    COLLECT = 0,
    DAILY = 1,
    ACTIVATE = 2,
    DURATION = 3,
}

table clz_Torappu_SandboxTrapRewardConfigData {
    dropType: enum__Torappu_SandboxRewardTrapDropType; 
    rewardItemId: string; 
    rewardItemType: enum__Torappu_SandboxItemType; 
    count: int; 
}

table dict__string__clz_Torappu_SandboxTrapRewardConfigData {
    key: string(key);
    value: clz_Torappu_SandboxTrapRewardConfigData;
}

table clz_Torappu_SandboxRewardCommonConfig {
    rewardItemId: string; 
    rewardItemType: enum__Torappu_SandboxItemType; 
    count: int; 
}

table dict__string__clz_Torappu_SandboxRewardCommonConfig {
    key: string(key);
    value: clz_Torappu_SandboxRewardCommonConfig;
}

table dict__string__string {
    key: string(key);
    value: string;
}

table clz_Torappu_SandboxRewardConfigGroupData {
    stagePreviewRewardDict: [dict__string__clz_Torappu_SandboxRewardData]; 
    stageDefaultPreviewRewardDict: [dict__string__clz_Torappu_SandboxRewardData]; 
    rushPreviewRewardDict: [dict__string__clz_Torappu_SandboxRewardData]; 
    stageRewardDict: [dict__string__clz_Torappu_SandboxRewardData]; 
    rushRewardDict: [dict__string__clz_Torappu_SandboxRewardData]; 
    trapRewardDict: [dict__string__clz_Torappu_SandboxTrapRewardConfigData]; 
    enemyRewardDict: [dict__string__clz_Torappu_SandboxRewardCommonConfig]; 
    keyWordData: [dict__string__string]; 
}

table clz_Torappu_SandboxStaminaData {
    levelUpperLimit: int; 
    staminaUpperLimit: int; 
}

table dict__int__list_clz_Torappu_SandboxStaminaData {
    key: int(key);
    value: [clz_Torappu_SandboxStaminaData];
}

table dict__int__list_dict__int__list_clz_Torappu_SandboxStaminaData {
    key: int(key);
    value: [dict__int__list_clz_Torappu_SandboxStaminaData];
}

enum enum__Torappu_SandboxNodeType : int {
    NONE = 0,
    HOME = 1,
    BATTLE = 2,
    NEST = 3,
    COLLECT = 4,
    HUNT = 5,
    CAVE = 6,
    EVENT = 7,
    MISSION = 8,
    MARKET = 9,
}

table clz_Torappu_SandboxNodeTypeData {
    nodeType: enum__Torappu_SandboxNodeType; 
    name: string; 
    subName: string; 
    iconId: string; 
}

table dict__enum__Torappu_SandboxNodeType__clz_Torappu_SandboxNodeTypeData {
    key: enum__Torappu_SandboxNodeType(key);
    value: clz_Torappu_SandboxNodeTypeData;
}

table clz_Torappu_SandboxNodeUpgradeData {
    nodeUpdradeId: string; 
    name: string; 
    description: string; 
    upgradeDesc: string; 
    itemType: enum__Torappu_SandboxItemType; 
    itemSubType: enum__Torappu_SandboxBuildingItemType; 
    itemCnt: int; 
    itemRarity: int; 
}

table dict__string__clz_Torappu_SandboxNodeUpgradeData {
    key: string(key);
    value: clz_Torappu_SandboxNodeUpgradeData;
}

enum enum__Torappu_SandboxWeatherType : int {
    NORMAL = 0,
    RAINFOREST = 1,
    VOLCANO = 2,
    DESERT = 3,
}

table clz_Torappu_SandboxWeatherData {
    weatherId: string; 
    weatherType: enum__Torappu_SandboxWeatherType; 
    weatherLevel: int; 
    name: string; 
    description: string; 
    weatherTypeName: string; 
    weatherTypeIconId: string; 
    functionDesc: string; 
    buffId: string; 
}

table dict__string__clz_Torappu_SandboxWeatherData {
    key: string(key);
    value: clz_Torappu_SandboxWeatherData;
}

table clz_Torappu_SandboxStageData {
    stageId: string; 
    levelId: string; 
    code: string; 
    name: string; 
    loadingPicId: string; 
    description: string; 
    actionCost: int; 
    powerCost: int; 
}

table dict__string__clz_Torappu_SandboxStageData {
    key: string(key);
    value: clz_Torappu_SandboxStageData;
}

table clz_Torappu_SandboxEventData {
    eventSceneId: string; 
    hasThumbtack: bool; 
}

table dict__string__clz_Torappu_SandboxEventData {
    key: string(key);
    value: clz_Torappu_SandboxEventData;
}

enum enum__Torappu_SandboxEventType : int {
    RESOURCE = 0,
    FOOD = 1,
    MISSION = 2,
    BUSINESS = 3,
    ADVENTURE = 4,
    MYSTERY = 5,
}

table clz_Torappu_SandboxEventSceneData {
    choiceSceneId: string; 
    type: enum__Torappu_SandboxEventType; 
    title: string; 
    description: string; 
    choices: [string]; 
}

table dict__string__clz_Torappu_SandboxEventSceneData {
    key: string(key);
    value: clz_Torappu_SandboxEventSceneData;
}

enum enum__Torappu_SandboxEventChoiceType : int {
    LEAVE = 0,
    TRADE = 1,
    NEXT = 2,
    MISSION = 3,
}

table clz_Torappu_SandboxEventChoiceData {
    choiceId: string; 
    type: enum__Torappu_SandboxEventChoiceType; 
    costAction: int; 
    finishScene: bool; 
    title: string; 
    description: string; 
}

table dict__string__clz_Torappu_SandboxEventChoiceData {
    key: string(key);
    value: clz_Torappu_SandboxEventChoiceData;
}

table clz_Torappu_SandboxEventTypeData {
    eventType: enum__Torappu_SandboxEventType; 
    iconId: string; 
}

table dict__enum__Torappu_SandboxEventType__clz_Torappu_SandboxEventTypeData {
    key: enum__Torappu_SandboxEventType(key);
    value: clz_Torappu_SandboxEventTypeData;
}

enum enum__Torappu_ProfessionID : int {
    WARRIOR = 0,
    SNIPER = 1,
    TANK = 2,
    MEDIC = 3,
    SUPPORT = 4,
    CASTER = 5,
    SPECIAL = 6,
    TOKEN = 7,
    TRAP = 8,
    PIONEER = 9,
}

enum enum__Torappu_ProfessionCategory : int {
    NONE = 0,
    WARRIOR = 1,
    SNIPER = 2,
    TANK = 4,
    MEDIC = 8,
    SUPPORT = 16,
    CASTER = 32,
    SPECIAL = 64,
    TOKEN = 128,
    TRAP = 256,
    PIONEER = 512,
}

table clz_Torappu_SandboxMissionData {
    missionId: string; 
    desc: string; 
    effectDesc: string; 
    costAction: int; 
    charCnt: int; 
    professionIds: [enum__Torappu_ProfessionID]; // __prts__check_required__professionIds__
    profession: enum__Torappu_ProfessionCategory; 
    costStamina: int; 
}

table dict__string__clz_Torappu_SandboxMissionData {
    key: string(key);
    value: clz_Torappu_SandboxMissionData;
}

table clz_Torappu_SandboxUnitData {
    id: string; 
    name: string; 
}

table dict__string__clz_Torappu_SandboxUnitData {
    key: string(key);
    value: clz_Torappu_SandboxUnitData;
}

enum enum__Torappu_SandboxDailyDescTemplateType : int {
    VISITOR = 0,
    RARE_ANIMAL = 1,
    WANDER = 2,
    MARKET = 3,
}

table clz_Torappu_SandboxDailyDescTemplateData {
    type: enum__Torappu_SandboxDailyDescTemplateType; 
    templateDesc: [string]; 
}

table dict__enum__Torappu_SandboxDailyDescTemplateType__clz_Torappu_SandboxDailyDescTemplateData {
    key: enum__Torappu_SandboxDailyDescTemplateType(key);
    value: clz_Torappu_SandboxDailyDescTemplateData;
}

enum enum__Torappu_SandboxEnemyRushType : int {
    NORMAL = 0,
    ELITE = 1,
    BOSS = 2,
}

table clz_Torappu_Battle_Sandbox_RushEnemyConfig {
    enemyKey: string; 
    branchId: string; 
    count: int; 
    interval: float; 
}

table clz_Torappu_Battle_Sandbox_RushEnemyGroupConfig {
    enemyGroupKey: string; 
    weight: int; 
    enemy: [clz_Torappu_Battle_Sandbox_RushEnemyConfig]; 
    dynamicEnemy: [string]; 
}

table dict__enum__Torappu_SandboxEnemyRushType__list_clz_Torappu_Battle_Sandbox_RushEnemyGroupConfig {
    key: enum__Torappu_SandboxEnemyRushType(key);
    value: [clz_Torappu_Battle_Sandbox_RushEnemyGroupConfig];
}

table clz_Torappu_Battle_Sandbox_RushEnemyGroup_RushEnemyDBRef {
    id: string; 
    level: int; 
}

table clz_Torappu_Battle_Sandbox_RushEnemyGroup {
    rushEnemyGroupConfigs: [dict__enum__Torappu_SandboxEnemyRushType__list_clz_Torappu_Battle_Sandbox_RushEnemyGroupConfig]; 
    rushEnemyDbRef: [clz_Torappu_Battle_Sandbox_RushEnemyGroup_RushEnemyDBRef]; 
}

enum enum__Torappu_BuildableType : int {
    NONE = 0,
    MELEE = 1,
    RANGED = 2,
    ALL = 3,
}

table clz_Torappu_RuneData_Selector {
    professionMask: enum__Torappu_ProfessionCategory; 
    buildableMask: enum__Torappu_BuildableType; 
    charIdFilter: [string]; 
    enemyIdFilter: [string]; 
    enemyIdExcludeFilter: [string]; 
    skillIdFilter: [string]; 
    tileKeyFilter: [string]; 
    groupTagFilter: [string]; 
    filterTagFilter: [string]; 
    subProfessionExcludeFilter: [string]; 
}

table clz_Torappu_Blackboard_DataPair {
    key: string; 
    value: float; 
    valueStr: string; 
}

table clz_Torappu_RuneData {
    key: string; 
    selector: clz_Torappu_RuneData_Selector; 
    blackboard: [clz_Torappu_Blackboard_DataPair]; 
}

table clz_Torappu_RuneTable_PackedRuneData {
    id: string; 
    points: float; 
    mutexGroupKey: string; 
    description: string; 
    runes: [clz_Torappu_RuneData]; 
}

table dict__string__clz_Torappu_RuneTable_PackedRuneData {
    key: string(key);
    value: clz_Torappu_RuneTable_PackedRuneData;
}

enum enum__Torappu_LevelData_Difficulty : int {
    NONE = 0,
    NORMAL = 1,
    FOUR_STAR = 2,
    EASY = 4,
    ALL = 7,
}

table clz_Torappu_LegacyInLevelRuneData {
    difficultyMask: enum__Torappu_LevelData_Difficulty; 
    key: string; 
    professionMask: enum__Torappu_ProfessionCategory; 
    buildableMask: enum__Torappu_BuildableType; 
    blackboard: [clz_Torappu_Blackboard_DataPair]; 
}

table dict__string__list_clz_Torappu_LegacyInLevelRuneData {
    key: string(key);
    value: [clz_Torappu_LegacyInLevelRuneData];
}

table clz_Torappu_SandboxActTable {
    mapConstTable: clz_Torappu_SandboxMapConstTable; 
    baseConstTable: clz_Torappu_SandboxBaseConstTable; 
    battleLoadingTips: [clz_Torappu_TipData]; 
    foodProduceDatas: [dict__string__clz_Torappu_SandboxFoodProduceData]; 
    foodmatDatas: [dict__string__clz_Torappu_SandboxFoodmatBuffData]; 
    foodmatBuffDatas: [dict__string__clz_Torappu_SandboxFoodmatBuffData]; 
    foodStaminaDatas: [dict__string__clz_Torappu_SandboxFoodStaminaData]; 
    buildProduceDatas: [dict__string__clz_Torappu_SandboxBuildProduceData]; 
    buildGoldRatioDatas: [clz_Torappu_SandboxBuildGoldRatioData]; 
    buildingItemDatas: [dict__string__clz_Torappu_SandboxBuildingItemData]; 
    buildProduceUnlockDatas: [dict__string__clz_Torappu_SandboxBuildProduceUnlockData]; 
    craftItemDatas: [dict__string__clz_Torappu_SandboxCraftItemData]; 
    itemTrapDatas: [dict__string__clz_Torappu_SandboxItemTrapData]; 
    trapDeployLimitDatas: [dict__string__int]; 
    developmentDatas: [dict__string__clz_Torappu_SandboxDevelopmentData]; 
    developmentLimitDatas: [dict__string__clz_Torappu_SandboxDevelopmentLimitData]; 
    itemToastDatas: [dict__enum__Torappu_SandboxItemType__clz_Torappu_SandboxItemToastData]; 
    developmentLineSegmentDatas: [clz_Torappu_SandboxDevelopmentLineSegmentData]; 
    rewardConfigDatas: clz_Torappu_SandboxRewardConfigGroupData; 
    charStaminaMapping: [dict__int__list_dict__int__list_clz_Torappu_SandboxStaminaData]; 
    nodeTypeDatas: [dict__enum__Torappu_SandboxNodeType__clz_Torappu_SandboxNodeTypeData]; 
    nodeUpgradeDatas: [dict__string__clz_Torappu_SandboxNodeUpgradeData]; 
    weatherDatas: [dict__string__clz_Torappu_SandboxWeatherData]; 
    stageDatas: [dict__string__clz_Torappu_SandboxStageData]; 
    eventDatas: [dict__string__clz_Torappu_SandboxEventData]; 
    eventSceneDatas: [dict__string__clz_Torappu_SandboxEventSceneData]; 
    eventChoiceDatas: [dict__string__clz_Torappu_SandboxEventChoiceData]; 
    eventTypeDatas: [dict__enum__Torappu_SandboxEventType__clz_Torappu_SandboxEventTypeData]; 
    missionDatas: [dict__string__clz_Torappu_SandboxMissionData]; 
    unitData: [dict__string__clz_Torappu_SandboxUnitData]; 
    dailyDescTemplateDatas: [dict__enum__Torappu_SandboxDailyDescTemplateType__clz_Torappu_SandboxDailyDescTemplateData]; 
    rushAvgDict: [dict__string__string]; 
    rushEnemyGroup: clz_Torappu_Battle_Sandbox_RushEnemyGroup; 
    runeDatas: [dict__string__clz_Torappu_RuneTable_PackedRuneData]; 
    itemRuneList: [dict__string__list_clz_Torappu_LegacyInLevelRuneData]; 
}

table dict__string__clz_Torappu_SandboxActTable {
    key: string(key);
    value: clz_Torappu_SandboxActTable;
}

table clz_Torappu_SandboxItemData {
    itemId: string; 
    itemType: enum__Torappu_SandboxItemType; 
    itemName: string; 
    itemUsage: string; 
    itemDesc: string; 
    itemRarity: int; 
    sortId: int; 
    recommendTypeList: [enum__Torappu_SandboxNodeType]; 
    recommendPriority: int; 
    obtainApproach: string; 
}

table dict__string__clz_Torappu_SandboxItemData {
    key: string(key);
    value: clz_Torappu_SandboxItemData;
}

table clz_Torappu_SandboxTable {
    sandboxActTables: [dict__string__clz_Torappu_SandboxActTable]; 
    itemDatas: [dict__string__clz_Torappu_SandboxItemData]; 
}

root_type clz_Torappu_SandboxTable;

table Torappu__SandboxMapConstTable {
    directionNames: [string];
    homeNodeStageId: string;
    homeRushStageCode: string;
    homeRushStageName: string;
    homeRushDesc: string;
    crazyRevengeRushGroup: string;
    homeBuildModeBGM: string;
}
table Torappu__SandboxBaseConstTable {
    cookRegularCostItemId: string;
    cookRegularCostItemIdCnt: int;
    squadTabNameList: [string];
    charRarityColorList: [string];
    sumFoodLimitedCount: int;
    sumBuildingLimitedCount: int;
    sumTacticalLimitedCount: int;
    sumFoodMatLimitedCount: int;
    sumBuildingMatLimitedCount: int;
    sumStaminaPotLimitedCount: int;
    sumGoldLimitedCount: int;
    itemLimitedCount: int;
    blackBoxSlotCnt: int;
    scoutNodeUpgradeId: string;
    battleNodeUpgradeId: string;
    staminaPotCostOnce: int;
    staminaPotItemId: string;
    staminapotRedMinCnt: int;
    staminapotYellowMinCnt: int;
    staminapotGreenMinCnt: int;
    staminapotMaxPercentCnt: int;
    staminaPotActionPoint: int;
    goldItemId: string;
    toolboxSlotCapacity: int;
    toolboxSlotCnt: int;
    teamPopulationLimit: int;
    researchInformationDesc: string;
    settleFailDesc: string;
    settleAbortDesc: string;
    settleSucDesc: string;
}
enum Torappu__Category : int {
    NONE = 0,
    BATTLE = 1,
    UI = 2,
    BUILDING = 4,
    GACHA = 8,
    MISC = 16,
    ALL = 31,
}
table Torappu__TipData {
    tip: string;
    weight: float;
    category: Torappu__Category;
}
table Torappu__SandboxFoodProduceData {
    itemId: string;
    mainMaterialItems: [string];
    buffId: string;
    unlockDesc: string;
}
enum Torappu__SandboxFoodMatType : int {
    MAIN = 0,
    SUB = 1,
}
table Torappu__SandboxFoodmatBuffData {
    itemId: string;
    buffId: string;
    buffDesc: string;
    matType: Torappu__SandboxFoodMatType;
    sortId: int;
}
table Torappu__SandboxFoodStaminaData {
    itemId: string;
    potCnt: int;
    foodStaminaCnt: int;
}
table Torappu__SandboxBuildProduceData {
    itemProduceId: string;
    itemId: string;
    itemTypeText: string;
    materialItems: [int];
}
table Torappu__SandboxBuildGoldRatioData {
    itemId: string;
    ratio: int;
    effectDesc: string;
}
enum Torappu__SandboxBuildingItemType : int {
    NONE = 0,
    PRODUCTION = 1,
    SCOUT = 2,
    BATTLE = 3,
    FUNCTION = 4,
}
table Torappu__SandboxBuildingItemData {
    itemId: string;
    itemSubType: Torappu__SandboxBuildingItemType;
    itemRarity: int;
}
table Torappu__SandboxBuildProduceUnlockData {
    itemId: string;
    buildingEffectDesc: string;
    buildingItemDesc: string;
    buildingUnlockDesc: string;
}
enum Torappu__SandboxCraftItemType : int {
    SHORT = 0,
    LONG = 1,
}
table Torappu__SandboxCraftItemData {
    itemId: string;
    sortId: int;
    getFrom: string;
    npcId: string;
    notObtainedDesc: string;
    itemType: Torappu__SandboxCraftItemType;
}
table Torappu__SandboxItemTrapData {
    itemId: string;
    trapId: string;
    trapPhase: int;
    trapLevel: int;
    skillIndex: int;
    skillLevel: int;
}
table Torappu__SandboxDevelopmentData {
    buffId: string;
    positionX: int;
    positionY: int;
    frontNodeId: string;
    nextNodeIds: [string];
    buffLimitedId: string;
    tokenCost: int;
    canBuffResearch: bool;
    buffResearchDesc: string;
    buffName: string;
    buffIconId: string;
    nodeTitle: string;
    buffEffectDesc: string;
}
table Torappu__SandboxDevelopmentLimitData {
    buffLimitedId: string;
    positionX: int;
    buffCostLimitedCount: int;
}
enum Torappu__SandboxItemType : int {
    NONE = 0,
    TACTICAL = 1,
    STAMINA = 2,
    STAMINAPOT = 3,
    BUILDING = 4,
    BUILDINGMAT = 5,
    FOOD = 6,
    FOODMAT = 7,
    SPECIALMAT = 8,
    GOLD = 9,
    CRAFT = 10,
    PLACEHOLDER = 11,
}
table Torappu__SandboxItemToastData {
    itemType: Torappu__SandboxItemType;
    toastDesc: string;
    color: string;
}
table Torappu__SandboxDevelopmentLineSegmentData {
    fromNodeId: string;
    passingNodeIds: [string];
    fromAxisPosX: int;
    fromAxisPosY: int;
    toAxisPosX: int;
    toAxisPosY: int;
}
table Torappu__SandboxRewardItemConfigData {
    rewardItem: string;
    rewardType: Torappu__SandboxItemType;
}
table Torappu__SandboxRewardData {
    rewardList: [Torappu__SandboxRewardItemConfigData];
}
enum Torappu__SandboxRewardTrapDropType : int {
    COLLECT = 0,
    DAILY = 1,
    ACTIVATE = 2,
    DURATION = 3,
}
table Torappu__SandboxTrapRewardConfigData {
    dropType: Torappu__SandboxRewardTrapDropType;
    rewardItemId: string;
    rewardItemType: Torappu__SandboxItemType;
    count: int;
}
table Torappu__SandboxRewardCommonConfig {
    rewardItemId: string;
    rewardItemType: Torappu__SandboxItemType;
    count: int;
}
table SandboxMaterialKeyWordData__dict {
    key: string;
    value: string;
}
table Torappu__SandboxRewardData__dict {
    key: string;
    value: Torappu__SandboxRewardData;
}
table Torappu__SandboxTrapRewardConfigData__dict {
    key: string;
    value: Torappu__SandboxTrapRewardConfigData;
}
table Torappu__SandboxRewardCommonConfig__dict {
    key: string;
    value: Torappu__SandboxRewardCommonConfig;
}
table Torappu__SandboxRewardConfigGroupData {
    stagePreviewRewardDict: [Torappu__SandboxRewardData__dict];
    stageDefaultPreviewRewardDict: [Torappu__SandboxRewardData__dict];
    rushPreviewRewardDict: [Torappu__SandboxRewardData__dict];
    stageRewardDict: [Torappu__SandboxRewardData__dict];
    rushRewardDict: [Torappu__SandboxRewardData__dict];
    trapRewardDict: [Torappu__SandboxTrapRewardConfigData__dict];
    enemyRewardDict: [Torappu__SandboxRewardCommonConfig__dict];
    keyWordData: [SandboxMaterialKeyWordData__dict];
}
table Torappu__SandboxStaminaData {
    levelUpperLimit: int;
    staminaUpperLimit: int;
}
enum Torappu__SandboxNodeType : int {
    NONE = 0,
    HOME = 1,
    BATTLE = 2,
    NEST = 3,
    COLLECT = 4,
    HUNT = 5,
    CAVE = 6,
    EVENT = 7,
    MISSION = 8,
    MARKET = 9,
}
table Torappu__SandboxNodeTypeData {
    nodeType: Torappu__SandboxNodeType;
    name: string;
    subName: string;
    iconId: string;
}
table Torappu__SandboxNodeUpgradeData {
    nodeUpdradeId: string;
    name: string;
    description: string;
    upgradeDesc: string;
    itemType: Torappu__SandboxItemType;
    itemSubType: Torappu__SandboxBuildingItemType;
    itemCnt: int;
    itemRarity: int;
}
enum Torappu__SandboxWeatherType : int {
    NORMAL = 0,
    RAINFOREST = 1,
    VOLCANO = 2,
    DESERT = 3,
}
table Torappu__SandboxWeatherData {
    weatherId: string;
    weatherType: Torappu__SandboxWeatherType;
    weatherLevel: int;
    name: string;
    description: string;
    weatherTypeName: string;
    weatherTypeIconId: string;
    functionDesc: string;
    buffId: string;
}
table Torappu__SandboxStageData {
    stageId: string;
    levelId: string;
    code: string;
    name: string;
    loadingPicId: string;
    description: string;
    actionCost: int;
    powerCost: int;
}
table Torappu__SandboxEventData {
    eventSceneId: string;
    hasThumbtack: bool;
}
enum Torappu__SandboxEventType : int {
    RESOURCE = 0,
    FOOD = 1,
    MISSION = 2,
    BUSINESS = 3,
    ADVENTURE = 4,
    MYSTERY = 5,
}
table Torappu__SandboxEventSceneData {
    choiceSceneId: string;
    type: Torappu__SandboxEventType;
    title: string;
    description: string;
    choices: [string];
}
enum Torappu__SandboxEventChoiceType : int {
    LEAVE = 0,
    TRADE = 1,
    NEXT = 2,
    MISSION = 3,
}
table Torappu__SandboxEventChoiceData {
    choiceId: string;
    type: Torappu__SandboxEventChoiceType;
    costAction: int;
    finishScene: bool;
    title: string;
    description: string;
}
table Torappu__SandboxEventTypeData {
    eventType: Torappu__SandboxEventType;
    iconId: string;
}
enum Torappu__ProfessionID : int {
    WARRIOR = 0,
    SNIPER = 1,
    TANK = 2,
    MEDIC = 3,
    SUPPORT = 4,
    CASTER = 5,
    SPECIAL = 6,
    TOKEN = 7,
    TRAP = 8,
    PIONEER = 9,
}
enum Torappu__ProfessionCategory : int {
    NONE = 0,
    WARRIOR = 1,
    SNIPER = 2,
    TANK = 4,
    MEDIC = 8,
    SUPPORT = 16,
    CASTER = 32,
    SPECIAL = 64,
    TOKEN = 128,
    TRAP = 256,
    PIONEER = 512,
}
table Torappu__SandboxMissionData {
    missionId: string;
    desc: string;
    effectDesc: string;
    costAction: int;
    charCnt: int;
    professionIds: [Torappu__ProfessionID];
    profession: Torappu__ProfessionCategory;
    costStamina: int;
}
table Torappu__SandboxUnitData {
    id: string;
    name: string;
}
enum Torappu__SandboxDailyDescTemplateType : int {
    VISITOR = 0,
    RARE_ANIMAL = 1,
    WANDER = 2,
    MARKET = 3,
}
table Torappu__SandboxDailyDescTemplateData {
    type: Torappu__SandboxDailyDescTemplateType;
    templateDesc: [string];
}
table Torappu_Battle_Sandbox__RushEnemyConfig {
    enemyKey: string;
    branchId: string;
    count: int;
    interval: float;
}
table Torappu_Battle_Sandbox__RushEnemyGroupConfig {
    enemyGroupKey: string;
    weight: int;
    enemy: [Torappu_Battle_Sandbox__RushEnemyConfig];
    dynamicEnemy: [string];
}
enum Torappu__SandboxEnemyRushType : int {
    NORMAL = 0,
    ELITE = 1,
    BOSS = 2,
}
table rushEnemyGroupConfigs__dict {
    key: Torappu__SandboxEnemyRushType;
    value: [Torappu_Battle_Sandbox__RushEnemyGroupConfig];
}
table Torappu_Battle_Sandbox__RushEnemyDBRef {
    id: string;
    level: int;
}
table Torappu_Battle_Sandbox__RushEnemyGroup {
    rushEnemyGroupConfigs: [rushEnemyGroupConfigs__dict];
    rushEnemyDbRef: [Torappu_Battle_Sandbox__RushEnemyDBRef];
}
enum Torappu__BuildableType : int {
    NONE = 0,
    MELEE = 1,
    RANGED = 2,
    ALL = 3,
}
table Torappu__Selector {
    professionMask: Torappu__ProfessionCategory;
    buildableMask: Torappu__BuildableType;
    charIdFilter: [string];
    enemyIdFilter: [string];
    enemyIdExcludeFilter: [string];
    skillIdFilter: [string];
    tileKeyFilter: [string];
    groupTagFilter: [string];
    filterTagFilter: [string];
}
table Torappu__DataPair {
    key: string;
    value: float;
    valueStr: string;
}
table Torappu__RuneData {
    key: string;
    selector: Torappu__Selector;
    blackboard: [Torappu__DataPair];
}
table Torappu__PackedRuneData {
    id: string;
    points: float;
    mutexGroupKey: string;
    description: string;
    runes: [Torappu__RuneData];
}
table Torappu__SandboxStaminaData__dict {
    key: int;
    value: [Torappu__SandboxStaminaData];
}
table charStaminaMapping__dict {
    key: int;
    value: [Torappu__SandboxStaminaData__dict];
}
enum Torappu__Difficulty : int {
    NONE = 0,
    NORMAL = 1,
    FOUR_STAR = 2,
    EASY = 4,
    ALL = 7,
}
table Torappu_LegacyInLevelRuneData {
    difficultyMask: Torappu__Difficulty;
    key: string;
    professionMask: Torappu__ProfessionCategory;
    buildableMask: Torappu__BuildableType;
    blackboard: [Torappu__DataPair];
}
table Torappu_LegacyInLevelRuneData__dict {
    key: string;
    value: [Torappu_LegacyInLevelRuneData];
}
table Torappu__SandboxActTable__dict {
    key: string;
    value: Torappu__SandboxActTable;
}
table Torappu__SandboxFoodProduceData__dict {
    key: string;
    value: Torappu__SandboxFoodProduceData;
}
table Torappu__SandboxFoodmatBuffData__dict {
    key: string;
    value: Torappu__SandboxFoodmatBuffData;
}
table Torappu__SandboxFoodStaminaData__dict {
    key: string;
    value: Torappu__SandboxFoodStaminaData;
}
table Torappu__SandboxBuildProduceData__dict {
    key: string;
    value: Torappu__SandboxBuildProduceData;
}
table Torappu__SandboxBuildingItemData__dict {
    key: string;
    value: Torappu__SandboxBuildingItemData;
}
table Torappu__SandboxBuildProduceUnlockData__dict {
    key: string;
    value: Torappu__SandboxBuildProduceUnlockData;
}
table Torappu__SandboxCraftItemData__dict {
    key: string;
    value: Torappu__SandboxCraftItemData;
}
table Torappu__SandboxItemTrapData__dict {
    key: string;
    value: Torappu__SandboxItemTrapData;
}
table Torappu__SandboxDevelopmentData__dict {
    key: string;
    value: Torappu__SandboxDevelopmentData;
}
table Torappu__SandboxDevelopmentLimitData__dict {
    key: string;
    value: Torappu__SandboxDevelopmentLimitData;
}
table Torappu__SandboxItemToastData__dict {
    key: Torappu__SandboxItemType;
    value: Torappu__SandboxItemToastData;
}
table Torappu__SandboxNodeTypeData__dict {
    key: Torappu__SandboxNodeType;
    value: Torappu__SandboxNodeTypeData;
}
table Torappu__SandboxNodeUpgradeData__dict {
    key: string;
    value: Torappu__SandboxNodeUpgradeData;
}
table Torappu__SandboxWeatherData__dict {
    key: string;
    value: Torappu__SandboxWeatherData;
}
table Torappu__SandboxStageData__dict {
    key: string;
    value: Torappu__SandboxStageData;
}
table Torappu__SandboxEventData__dict {
    key: string;
    value: Torappu__SandboxEventData;
}
table Torappu__SandboxEventSceneData__dict {
    key: string;
    value: Torappu__SandboxEventSceneData;
}
table Torappu__SandboxEventChoiceData__dict {
    key: string;
    value: Torappu__SandboxEventChoiceData;
}
table Torappu__SandboxEventTypeData__dict {
    key: Torappu__SandboxEventType;
    value: Torappu__SandboxEventTypeData;
}
table Torappu__SandboxMissionData__dict {
    key: string;
    value: Torappu__SandboxMissionData;
}
table Torappu__SandboxUnitData__dict {
    key: string;
    value: Torappu__SandboxUnitData;
}
table Torappu__SandboxDailyDescTemplateData__dict {
    key: Torappu__SandboxDailyDescTemplateType;
    value: Torappu__SandboxDailyDescTemplateData;
}
table dict_string_string {
    key: string;
    value: string;
}
table Torappu__PackedRuneData__dict {
    key: string;
    value: Torappu__PackedRuneData;
}
table Torappu__SandboxActTable {
    mapConstTable: Torappu__SandboxMapConstTable;
    baseConstTable: Torappu__SandboxBaseConstTable;
    battleLoadingTips: [Torappu__TipData];
    foodProduceDatas: [Torappu__SandboxFoodProduceData__dict];
    foodmatDatas: [Torappu__SandboxFoodmatBuffData__dict];
    foodmatBuffDatas: [Torappu__SandboxFoodmatBuffData__dict];
    foodStaminaDatas: [Torappu__SandboxFoodStaminaData__dict];
    buildProduceDatas: [Torappu__SandboxBuildProduceData__dict];
    buildGoldRatioDatas: [Torappu__SandboxBuildGoldRatioData];
    buildingItemDatas: [Torappu__SandboxBuildingItemData__dict];
    buildProduceUnlockDatas: [Torappu__SandboxBuildProduceUnlockData__dict];
    craftItemDatas: [Torappu__SandboxCraftItemData__dict];
    itemTrapDatas: [Torappu__SandboxItemTrapData__dict];
    trapDeployLimitDatas: [int];
    developmentDatas: [Torappu__SandboxDevelopmentData__dict];
    developmentLimitDatas: [Torappu__SandboxDevelopmentLimitData__dict];
    itemToastDatas: [Torappu__SandboxItemToastData__dict];
    developmentLineSegmentDatas: [Torappu__SandboxDevelopmentLineSegmentData];
    rewardConfigDatas: Torappu__SandboxRewardConfigGroupData;
    charStaminaMapping: [charStaminaMapping__dict];
    nodeTypeDatas: [Torappu__SandboxNodeTypeData__dict];
    nodeUpgradeDatas: [Torappu__SandboxNodeUpgradeData__dict];
    weatherDatas: [Torappu__SandboxWeatherData__dict];
    stageDatas: [Torappu__SandboxStageData__dict];
    eventDatas: [Torappu__SandboxEventData__dict];
    eventSceneDatas: [Torappu__SandboxEventSceneData__dict];
    eventChoiceDatas: [Torappu__SandboxEventChoiceData__dict];
    eventTypeDatas: [Torappu__SandboxEventTypeData__dict];
    missionDatas: [Torappu__SandboxMissionData__dict];
    unitData: [Torappu__SandboxUnitData__dict];
    dailyDescTemplateDatas: [Torappu__SandboxDailyDescTemplateData__dict];
    rushAvgDict: [dict_string_string];
    rushEnemyGroup: Torappu_Battle_Sandbox__RushEnemyGroup;
    runeDatas: [Torappu__PackedRuneData__dict];
    itemRuneList: [Torappu_LegacyInLevelRuneData__dict];
}
table Torappu__SandboxItemData {
    itemId: string;
    itemType: Torappu__SandboxItemType;
    itemName: string;
    itemUsage: string;
    itemDesc: string;
    itemRarity: int;
    sortId: int;
    recommendTypeList: [Torappu__SandboxNodeType];
    recommendPriority: int;
    obtainApproach: string;
}
table Torappu__SandboxItemData__dict {
    key: string;
    value: Torappu__SandboxItemData;
}
table Torappu__SandboxTable {
    sandboxActTables: [Torappu__SandboxActTable__dict];
    itemDatas: [Torappu__SandboxItemData__dict];
}

root_type Torappu__SandboxTable;